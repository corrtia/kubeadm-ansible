---

#- name: Reset Kubernetes component
#  shell: "kubeadm reset --force"
#  register: reset_cluster

- name: Create bootstrap tokens
  shell: kubeadm token create --print-join-command
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: kubernetes_tokens

- name: Get control-plane certificates
  shell: kubeadm init phase upload-certs --upload-certs
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  register: kubernetes_certificates

- name: Masters join to Kubernetes cluster
  when: 
    - kubernetes_tokens is defined and kubernetes_tokens > 0
    - kubernetes_certificates is defined and kubernetes_certificates > 0
  shell: |
    {{ kubernetes_tokens.stdout }} \
    --control-plane --certificate-key {{ certkubernetes_certificates_cmd.stdout.split('key:\n')[-1] }}
  register: master_join_cluster
  # See: https://github.com/jetstack/cert-manager/issues/2640 with using kubeadm + calico + cert-manager
  environment:
    #no_proxy: "$no_proxy,.svc,.svc.cluster.local"
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: master_join_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true
